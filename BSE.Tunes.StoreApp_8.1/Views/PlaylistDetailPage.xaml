<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="BSE.Tunes.StoreApp.Views.PlaylistDetailPage"
    DataContext="{Binding PlaylistDetailPageViewModel, Source={StaticResource Locator}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BSE.Tunes.StoreApp.Views"
    xmlns:common="using:BSE.Tunes.StoreApp.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:behaviours="using:BSE.Tunes.StoreApp.Behaviours"
    xmlns:controls="using:BSE.Tunes.StoreApp.Controls"
    xmlns:views="using:BSE.Tunes.StoreApp.Views"
    mc:Ignorable="d" FontFamily="Global User Interface">

    <Page.Resources>

    </Page.Resources>
    <Page.TopAppBar>
        <AppBar x:Uid="TopAppBar">
            <views:TopAppBarUserControl/>
        </AppBar>
    </Page.TopAppBar>

    <Page.BottomAppBar>
        <AppBar x:Uid="BottomAppBar" IsOpen="{Binding IsToolbarOpen, Mode=TwoWay}" IsSticky="{Binding IsToolbarOpen}" FontFamily="Global User Interface">
            <Grid>
                <StackPanel Orientation="Horizontal" Height="120" HorizontalAlignment="Left">
                    <AppBarButton x:Uid="ButtonPlaySelection" Icon="Play"
                                  Command="{Binding PlaySelectedItemsCommand}"
                                  VerticalAlignment="Top"/>
                    <controls:DropDownButton Icon="Add"
                                             x:Name="SelectedToFavoritesButton"
                                             x:Uid="ButtonSelectedToFavorites"
                                             IsEnabled="{Binding HasSelectedItems}">
                        <controls:DropDownButton.ContextMenu>
                            <controls:ContextMenu ItemsSource="{Binding MenuItemsPlaylist}" toolkit:ListViewExtensions.Command="{Binding SelectedToPlaylistCommand}">
                                <controls:ContextMenu.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Content}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </controls:ContextMenu.ItemTemplate>
                            </controls:ContextMenu>
                        </controls:DropDownButton.ContextMenu>
                        <FlyoutBase.AttachedFlyout>
                            <Flyout behaviours:FlyoutExtensions.IsOpen="{Binding NewSelectedToPlaylistViewModel.IsOpen, Mode=TwoWay}"
                                    behaviours:FlyoutExtensions.Parent="{Binding ElementName=SelectedToFavoritesButton}">
                                <views:NewPlaylistUserControl DataContext="{Binding NewSelectedToPlaylistViewModel}"/>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </controls:DropDownButton>
                    <AppBarButton x:Uid="ButtonDeleteFromPlaylist"
                                  Command="{Binding DeleteSelectedEntriesCommand}" VerticalAlignment="Top" Icon="Remove"/>
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>
    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <views:ImagePreview Grid.RowSpan="3" Source="{Binding ImageSource, Mode=TwoWay}" ImageOpacity="0.35" Stretch="UniformToFill"/>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="660"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <StackPanel>
                    <Image Width="500" Margin="10" Source="{Binding ImageSource, Mode=TwoWay}"/>
                    <StackPanel Margin="10" Orientation="Horizontal" HorizontalAlignment="Center">
                        <controls:DropDownButton Icon="Add"
                                                 x:Name="ButtonAddToPlaylist" x:Uid="ButtonAddToPlaylist"
                                                 Visibility="{Binding HasEntries, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 ToolTipService.ToolTip="Add to" HorizontalAlignment="Center">
                            <controls:DropDownButton.ContextMenu>
                                <controls:ContextMenu ItemsSource="{Binding MenuItemsPlaylist}" toolkit:ListViewExtensions.Command="{Binding CompleteToPlaylistCommand}">
                                    <controls:ContextMenu.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Content}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </controls:ContextMenu.ItemTemplate>
                                </controls:ContextMenu>
                            </controls:DropDownButton.ContextMenu>
                            <FlyoutBase.AttachedFlyout>
                                <Flyout behaviours:FlyoutExtensions.IsOpen="{Binding NewCompleteToPlaylistViewModel.IsOpen, Mode=TwoWay}"
                                        behaviours:FlyoutExtensions.Parent="{Binding ElementName=ButtonAddToPlaylist}">
                                    <views:NewPlaylistUserControl DataContext="{Binding NewCompleteToPlaylistViewModel}"/>
                                </Flyout>
                            </FlyoutBase.AttachedFlyout>
                        </controls:DropDownButton>
                        <AppBarButton Icon="Play" Command="{Binding PlayPlaylistCommand}" Visibility="{Binding HasEntries, Converter={StaticResource BooleanToVisibilityConverter}}" ToolTipService.ToolTip="Play Playlist" x:Uid="ButtonPlayPlaylist"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
            <ListView Grid.Column="1" ItemsSource="{Binding Entries}" SelectionMode="Extended"
                      AllowDrop="True" CanDragItems="True" CanReorderItems="True"
                      toolkit:ListViewExtensions.BindableSelection="{Binding SelectedItems, Mode=TwoWay}"
                      HorizontalAlignment="Left" Width="600">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Width="550" Height="40">
                            <TextBlock Text="{Binding Name}" FontSize="20" FontWeight="Semilight" 
                                       Margin="10,0,0,0" Style="{StaticResource BasicTextStyle}" Width="220" TextTrimming="WordEllipsis" 
                                       HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding Artist}" Width="220" FontSize="20" FontWeight="Semilight" 
                                       Margin="10,0,0,0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding Duration}" Width="80" FontSize="20" FontWeight="Semilight" 
                                       Margin="10,0,0,0" Style="{StaticResource BasicTextStyle}"
                                       HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Command="{Binding GoBackCommand}" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <Image Source="ms-appx:///Assets/BSELogo220x140.png"/>
                <TextBlock x:Name="pageTitle" Text="{Binding PageTitle}" TextTrimming="WordEllipsis" Style="{StaticResource PageHeaderTextStyle}" Grid.Column="1" IsHitTestVisible="false"/>
            </StackPanel>
            <views:SearchUserControl Grid.Column="2" Margin="15,20,15,15"/>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The back button respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
